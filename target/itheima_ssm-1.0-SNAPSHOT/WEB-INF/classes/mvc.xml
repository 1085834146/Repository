<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/mvc
                           http://www.springframework.org/schema/mvc/spring-mvc.xsd">

<!--    注解扫描配置-->
    <context:component-scan base-package="com.fjndljh.Controller"/>
<!--    注解驱动 -->
    <mvc:annotation-driven></mvc:annotation-driven>
<!--  视图解析器
        捕获后端控制器返回值"xxx"，在此String前后拼接，==> "/xxx.jsp"
  -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/"></property>   <!--前缀-->
        <property name="suffix" value=".jsp"></property>   <!--后缀-->
    </bean>
<!--
添加 <mvc:default-servlet-handler/>  解决访问静态资源报404：
        自动额外增加一个handler（Controller中的方法就是handler），并且它的
           @RequestMapping映射的是 "/**" ，因为这个默认handler的优先级最低，
           只有在所有handler都匹配不上，请求才会到达它。而此时到达的就一定是静态资源的请求。
            此时这个handler只是转发，即把静态请求转发给tomcat默认全局servlet
-->
    <mvc:default-servlet-handler/>
<!--    以下方法也可以解决404，不过url为 http://。。。/html/test1.html -->
<!--    <mvc:resources mapping="/html/**" location="/page/"/>-->
</beans>